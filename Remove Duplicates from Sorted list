/*
 * Author: vansh
 * UID: 22BET10089
 * Problem: Remove duplicates from a sorted linked list and keep only distinct numbers.
 */
Aim:Operating System-Based Question:
This experiment combines data structures and operating system concepts, focusing on Linked Lists and OS-related problems.
Objective:The objective of this program is to remove all duplicate nodes from a sorted linked list while retaining only distinct elements. The program ensures that the modified linked list contains only unique values and remains sorted.
#include <iostream>
using namespace std;

// Definition for singly-linked list.
struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

// Function to delete all duplicate nodes
ListNode* deleteDuplicates(ListNode* head) {
    if (!head || !head->next) return head;

    ListNode* dummy = new ListNode(0);  // Dummy node before head
    dummy->next = head;
    ListNode* prev = dummy;
    
    while (head) {
        bool isDuplicate = false;
        while (head->next && head->val == head->next->val) {
            head = head->next;
            isDuplicate = true;
        }
        
        if (isDuplicate) {
            prev->next = head->next;  // Skip duplicates
        } else {
            prev = prev->next;
        }
        
        head = head->next;
    }
    
    return dummy->next;
}

// Utility function to print the linked list
void printList(ListNode* head) {
    while (head) {
        cout << head->val << " ";
        head = head->next;
    }
    cout << endl;
}

// Driver code
int main() {
    // Creating linked list: 1 -> 2 -> 3 -> 3 -> 4 -> 4 -> 5
    ListNode* head = new ListNode(1);
    head->next = new ListNode(2);
    head->next->next = new ListNode(3);
    head->next->next->next = new ListNode(3);
    head->next->next->next->next = new ListNode(4);
    head->next->next->next->next->next = new ListNode(4);
    head->next->next->next->next->next->next = new ListNode(5);

    cout << "Original List: ";
    printList(head);

    // Function call to remove duplicates
    ListNode* newHead = deleteDuplicates(head);

    cout << "Modified List (Only Distinct Elements): ";
    printList(newHead);

    return 0;
}
